##### Application properties #####
app.name='@project.name@'
app.desc='@project.description@'
app.version='@project.version@'
app.url=http://localhost:8080
app.dev-name=None
app.dev-email=none@none.com
server.port=8080


#####  SPRING DOC PROPERTIES #####
springdoc.packages-to-scan=ar.edu.utn.frc.tup.lciii.controllers
springdoc.show-actuator=true
springdoc.swagger-ui.disable-swagger-default-url=true
# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html

## Spring Data Source ##
spring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

## Spring JPA ##
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true

# Resiliece4j Configuration
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Preguntar a chat gpt sobre esta propiedad.
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
# Indica cada cuantas llamadas va a calcular
resilience4j.circuitbreaker.configs.default.sliding-window-size=2
# Indica que va a esperar a una cantidad de llamadas antes de comenzar a contar.
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5

resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=10
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
# Cada cuanto tiempo va a intentar vovelr a estado cerrado.
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s

# Si falla el 50% el circuito debe pasar a estado "abierto". Si tiene un exito del 50% pasa a estado cerrado.
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50

# Existen dos, time_based y count_based, sirve para establecer la naturaleza del healt-indicator.
# Preguntar a chat gpt sobre esta propiedad.
resilience4j.circuitbreaker.configs.shared.sliding-window-type=count_based